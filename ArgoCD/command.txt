
    Installing ArgoCD oon EKS:-

1)  kubectl create namespace argocd

2) kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.4.7/manifests/install.yaml----------link of content

:-To craete load balancer and expose publicly

3) kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'

                   or

kubectl patch svc argocd-server -n argocd --type='json' -p '[{"op": "replace", "path": "/spec/type", "value": "NodePort"}]'


4)  To get hostname for access ArgoCD on bfrowser

export ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`

                     or   port expose

                kubectl port-forward svc/argocd-server -n argocd 8080:443


5) The initial password is autogenerated with the pod name of the ArgoCD API server

$kubectlOutput = kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}"
$decodedPassword = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($kubectlOutput))
Write-Host $decodedPassword


6) Using admin as login and the autogenerated password:



7) To get pod and service check

kubetl get pods -n argocd

kubectl get svc -n argocd


 8) To Deploy Canary Rollout we recquired custom resource api , so we can install it by:- 

 kubectl apply -n argocd -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml

9) Can check api resource if already installed or not by command on powershell

kubectl api-resources -o wide | findstr rollout --- get api version or resources
